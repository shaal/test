<?php

/**
 * @file
 * Functions to support theming in the Pattern Lab theme.
 */

use Drupal\block\Entity\Block;
use Drupal\Core\Url;
use Drupal\image\Entity\ImageStyle;
use Drupal\node\NodeInterface;
use Drupal\core\entity\EntityInterface;
use Drupal\taxonomy\Entity\Term;

/**
 * Remove variables from exposed provider search form.
 *
 * {@inheritdoc}
 */
function tower_health_preprocess_block__exposedformfind_a_providerfind_doctor(&$variables, $hook) {
  unset($variables['content']['provider_location_latlong']);
  unset($variables['content']['facets']);
}

/**
 * Remove variables from exposed location search form.
 *
 * {@inheritdoc}
 */
function tower_health_preprocess_block__exposedformfind_a_locationfind_location(&$variables, $hook) {
  unset($variables['content']['location_latlon']);
  unset($variables['content']['facets']);
}

/**
 * Alter proximity block for location search.
 *
 * {@inheritdoc}
 */
function tower_health_preprocess_block__locationproximityfilter(&$variables, $hook) {
  if (array_key_exists('submit', $variables['content']['exposed_form']['actions'])) {
    $variables['content']['exposed_form']['actions']['submit']['#value'] = 'Apply';
  }
  if (array_key_exists('location_latlon', $variables['content']['exposed_form'])) {
    $variables['content']['exposed_form']['location_latlon']['value']['#attributes']['class'] = ['js-set-my-location'];
    $variables['content']['exposed_form']['location_latlon']['distance']['#attributes']['class'] = ['js-set-my-radius'];
  }
}

/**
 * Adds a body class by role.
 */
function tower_health_preprocess_html(&$variables) {
  foreach ($variables['user']->getRoles() as $role) {
    $variables['attributes']['class'][] = 'role-' . $role;
  }
}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function tower_health_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $suggestions[] = 'page__' . $node->bundle();
  }
}

/**
 * Adds node title to paragraphs.
 */
function tower_health_preprocess_paragraph__basic_header(&$variables){
  $node = \Drupal::request()->attributes->get('node');
  $variables['node_title'] = $node->getTitle();
}

/**
 * Load the utility menu into a variable.
 */
function tower_health_preprocess_menu(&$variables) {
  $utility_nav_block = Block::load('tower_health_utility');
  $utility_nav_block_view = \Drupal::entityTypeManager()
    ->getViewBuilder('block')
    ->view($utility_nav_block);
  if ($utility_nav_block_view) {
    $variables['utility_nav'] = $utility_nav_block_view;
  }
}

/**
 * Alter proximity block for provider search.
 *
 * {@inheritdoc}
 */
function tower_health_preprocess_block__providerproximityfilter(&$variables, $hook) {
  if (array_key_exists('submit', $variables['content']['exposed_form']['actions'])) {
    $variables['content']['exposed_form']['actions']['submit']['#value'] = 'Apply';
  }
  if (array_key_exists('provider_location_latlong', $variables['content']['exposed_form'])) {
    $variables['content']['exposed_form']['provider_location_latlong']['value']['#attributes']['class'] = ['js-set-my-location'];
    $variables['content']['exposed_form']['provider_location_latlong']['distance']['#attributes']['class'] = ['js-set-my-radius'];
  }
}

/**
 * Add page theme suggestions.
 */
function tower_health_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $suggestions[] = 'page__' . $node->bundle();
  }
}

/**
 * Preprocess provider medical specialties.
 */
function _get_specialties($node, &$variables) {
  if ($node->hasField('field_medical_specialties_ref') && !$node->get('field_medical_specialties_ref')->isEmpty()) {
    $specialty_refs = $node->get('field_medical_specialties_ref')->getValue();
    $specialties = [];
    foreach ($specialty_refs as $id => $specialty) {
      $entity = $node->field_medical_specialties_ref[$id]->entity;
      if ($entity instanceof EntityInterface) {
        $tid = $entity->tid->value;
        $term = Term::load($tid);
        $name = $term->getName();
        $specialties[$id]['text'] = $name;
      }
    }
  }
  if ($specialties) {
    $variables['specialties'] = $specialties;
  }
}

/**
 * Preprocess provider focus.
 */
function _get_focuses($node, &$variables) {
  if ($node->hasField('field_area_interest_ref') && !$node->get('field_area_interest_ref')->isEmpty()) {
    $focus_refs = $node->get('field_area_interest_ref')->getValue();
    $focuses = [];
    foreach ($focus_refs as $id => $focus) {
      $entity = $node->field_area_interest_ref[$id]->entity;
      if ($entity instanceof EntityInterface) {
        $tid = $entity->tid->value;
        $term = Term::load($tid);
        $name = $term->getName();
        $focuses[$id]['text'] = $name;
      }
    }
    if ($focuses) {
      $variables['focuses'] = $focuses;
    }
  }
}

/**
 * Preprocess provider languages.
 */
function _get_languages($node, &$variables) {
  if ($node->hasField('field_profile_languages') && !$node->get('field_profile_languages')->isEmpty()) {
    $languages = $node->get('field_profile_languages')->getValue();
    $language_names = [];
    foreach ($languages as $id => $language) {
      $language_names[$id]['text'] = $language['value'];
    }
    if ($language_names) {
      $variables['languages'] = $language_names;
    }
  }
}

/**
 * Preprocess provider hospital affiliations.
 */
function _get_affiliations($node, &$variables) {
  if ($node->hasField('field_affiliations_ref') && !$node->get('field_affiliations_ref')->isEmpty()) {
    $affiliation_refs = $node->get('field_affiliations_ref')->getValue();
    $affiliations = [];
    foreach ($affiliation_refs as $id => $affiliation) {
      $entity = $node->field_affiliations_ref[$id]->entity;
      if ($entity instanceof EntityInterface) {
        $tid = $entity->tid->value;
        $term = Term::load($tid);
        $name = $term->getName();
        $affiliations[$id]['text'] = $name;
      }
    }
    if ($affiliations) {
      $variables['affiliations'] = $affiliations;
    }
  }
}

/**
 * Preprocess provider certifications.
 */
function _get_certifications($node, &$variables) {
  if ($node->hasField('field_profile_board_certified') && !$node->get('field_profile_board_certified')->isEmpty()) {
    $certifications = $node->get('field_profile_board_certified')->getValue();
    $certification_names = [];
    foreach ($certifications as $id => $certification) {
      $certification_names[$id]['title'] = $certification['value'];
    }
    if ($certification_names) {
      $variables['certifications'] = $certification_names;
    }
  }
}

/**
 * Preprocess provider education.
 */
function _get_education($node, &$variables) {
  if ($node->hasField('field_profile_education') && !$node->get('field_profile_education')->isEmpty()) {
    $educations = $node->get('field_profile_education')->referencedEntities();
    $education_items = [];
    foreach ($educations as $id => $education) {
      $education_items[$id]['title'] = $education->field_education_institution_ref->entity->name->value;
      $education_items[$id]['text'] = $education->field_education_type->value;
    }
    if ($education_items) {
      $variables['education'] = $education_items;
    }
  }
}

/**
 * Preprocess provider image.
 */
function _get_image($node, &$variables) {
  if ($node->hasField('field_profile_image') && !$node->get('field_profile_image')->isEmpty()) {
    $variables['src'] = file_create_url($node->field_profile_image->entity->field_media_image->entity->uri->value);
    $variables['alt'] = $node->field_profile_image->entity->field_media_image->entity->alt;
  }
  else {
    $variables['src'] = drupal_get_path('theme', 'tower_health') . '/images/people/provider-placeholder.png';
    $variables['alt'] = "Provider placeholder image";
  }

  if ($node->hasField('field_profile_image') && !$node->get('field_profile_image')->isEmpty()) {
    $media = $node->field_profile_image->entity;
    if ($media instanceof EntityInterface && $media->hasField('field_media_image') && !$media->get('field_media_image')->isEmpty()) {
      $file = $media->field_media_image->entity;
      if ($file instanceof EntityInterface) {
        $url = $file->uri->value;
        $image = ImageStyle::load('teaser_image')->buildUrl($url);
        $variables['src'] = $image;
        $variables['alt'] = $media->field_media_image->alt;
      }
    }
  }
  else {
    // Fallback if no image uploaded.
    $variables['src'] = drupal_get_path('theme', 'tower_health') . '/images/people/provider-placeholder.png';
    $variables['alt'] = "Provider placeholder image";
  }
}

/**
 * Preprocess provider accepted insurance.
 */
function _get_insurance($node, &$variables) {
  if ($node->hasField('field_insurance_ref') && !$node->get('field_insurance_ref')->isEmpty()) {
    $insurance_policies = $node->get('field_insurance_ref')->getValue();
    $accepted_policies = [];
    foreach ($insurance_policies as $id => $policy) {
      $entity = $node->field_insurance_ref[$id]->entity;
      if ($entity instanceof EntityInterface) {
        $tid = $entity->tid->value;
        $term = Term::load($tid);
        $name = $term->getName();
        array_push($accepted_policies, $name);
      }
    }
    if ($accepted_policies) {
      $variables['policies'] = $accepted_policies;
    }
  }
}

/**
 * Preprocess provider detail page.
 */
function tower_health_preprocess_page__profile(&$variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $variables['cal_icon'] = drupal_get_path('theme', 'tower_health') . '/images/icons/th-cal.svg';
    $variables['icon'] = drupal_get_path('theme', 'tower_health') . '/images/icons/star.svg';
    $variables['href'] = Url::fromUri('internal:/');

    $variables['title'] = $node->title->value;
    $variables['lede'] = $node->field_profile_job_title->value;
    $variables['phone'] = $node->field_profile_phone->value;
    $variables['rating'] = $node->field_rating_overall->value;
    $variables['review_amt'] = $node->field_rating_count->value;
    _get_specialties($node, $variables);
    _get_focuses($node, $variables);
    _get_languages($node, $variables);
    _get_affiliations($node, $variables);
    _get_certifications($node, $variables);
    _get_education($node, $variables);
    _get_image($node, $variables);
    _get_insurance($node, $variables);

    $review_items = $node->get('field_rating_comments_ref')->referencedEntities();
    $reviews = [];
    foreach ($review_items as $id => $review) {
      $reviews[$id]["review"] = strip_tags($review->field_rating_comment_body->value);
      $reviews[$id]["rating"] = $review->field_rating_comment_rating->value;
      $reviews[$id]["date"] = date("F Y", strtotime($review->field_rating_comment_date->value));
    }
    $variables['reviews'] = $reviews;
  }
}

/**
 * Provide variables for provider teaser.
 */
function tower_health_preprocess_node__profile(&$variables) {
  $node = $variables['node'];
  $variables['cal_icon'] = drupal_get_path('theme', 'tower_health') . '/images/icons/th-cal.svg';;
  $variables['icon'] = drupal_get_path('theme', 'tower_health') . '/images/icons/star.svg';
  $variables['href'] = Url::fromUri('internal:/');

  if ($node instanceof NodeInterface) {
    // Preprocess address.
    if ($node->hasField('field_location_ref') && !$node->get('field_location_ref')->isEmpty()) {
      $location_refs = $node->get('field_location_ref')->getValue();
      $locations = [];
      foreach ($location_refs as $id => $location) {
        $address = $node->field_location_ref[$id]->entity;
        if ($address instanceof EntityInterface && $address->hasField('field_location_address') && !$address->get('field_location_address')->isEmpty()) {
          $locality = $address->field_location_address->locality;
          $administrative_area = $address->field_location_address->administrative_area;
          $location = $locality . ", " . $administrative_area;
          if (!in_array($location, $locations)) {
            $locations[] = $location;
          }
        }
      }
      if ($location) {
        $variables['location'] = implode(", ", $locations);
      }
    }

    _get_specialties($node, $variables);
    _get_focuses($node, $variables);
    _get_languages($node, $variables);
    _get_affiliations($node, $variables);
    _get_certifications($node, $variables);
    _get_education($node, $variables);
    _get_image($node, $variables);
  }
}

/**
 * Provide variables for location teaser.
 */
function tower_health_preprocess_node__location(&$variables) {
  $node = $variables['node'];

  // Set button icon.
  $variables['icon'] = drupal_get_path('theme', 'tower_health') . '/images/icons/th-find-hospital.svg';

  if ($node instanceof NodeInterface) {
    // Preprocess image variables.
    $media = $node->field_location_image->entity;
    if ($media instanceof EntityInterface && $media->hasField('field_media_image') && !$media->get('field_media_image')->isEmpty()) {
      $file = $media->field_media_image->entity;
      if ($file instanceof EntityInterface) {
        $url = $file->uri->value;
        $image = ImageStyle::load('teaser_image')->buildUrl($url);
        $variables['src'] = $image;
        $variables['alt'] = $media->field_media_image->alt;
      }
    }
    else {
      // Fallback if no image uploaded.
      $variables['src'] = drupal_get_path('theme', 'tower_health') . '/images/people/provider-placeholder.png';
      $variables['alt'] = "Location placeholder image";
    }

    if ($node->hasField('field_location_hours') && !$node->get('field_location_hours')->isEmpty()) {
      $variables['hours'] = TRUE;
    }

    // Preprocess address variables.
    if ($node->hasField('field_location_address') && !$node->get('field_location_address')->isEmpty()) {
      $locality = $node->field_location_address->locality;
      $administrative_area = $node->field_location_address->administrative_area;
      $address_1 = $node->field_location_address->address_line1;
      $address_2 = $locality . ', ' . $administrative_area;
      $href = "https://www.google.com/maps/place/" . str_replace(' ', '+', $address_1) . '+' . $locality . '+' . $administrative_area;
      $variables['address1'] = $address_1;
      $variables['address2'] = $address_2;
      $variables['href'] = $href;
    }

    // Preprocess phone numbers.
    if ($node->hasField('field_location_phone_number') && !$node->get('field_location_phone_number')->isEmpty()) {
      $variables['phone'] = $node->field_location_phone_number->value;
    }

    if ($node->hasField('field_location_fax') && !$node->get('field_location_fax')->isEmpty()) {
      $variables['fax'] = $node->field_location_fax->value;
    }
  }
}

function tower_health_preprocess_paragraph__rating_comments(&$variables) {
  $variables['icon'] = drupal_get_path('theme', 'tower_health') . '/images/icons/star.svg';
}

function tower_health_preprocess_field__field_rating_comments_ref(&$variables) {
  $variables['icon'] = drupal_get_path('theme', 'tower_health') . '/images/icons/star.svg';
}
