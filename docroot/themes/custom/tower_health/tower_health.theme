<?php

/**
 * @file
 * Functions to support theming in the Pattern Lab theme.
 */

use Drupal\block\Entity\Block;
use Drupal\image\Entity\ImageStyle;
use Drupal\node\NodeInterface;
use Drupal\core\entity\EntityInterface;
use Drupal\taxonomy\Entity\Term;
use Drupal\core\Url;

/**
 * Set page variables.
 */
function tower_health_preprocess_page(&$variables) {
  // Set the full width setting for any view page.
  $full_width_pages = [
    'view.find_a_location.find_location',
    'view.find_a_provider.find_doctor',
    'view.article_listing.article_listing_page'
  ];

  // Get the current route name.
  $current_route_name = \Drupal::service('current_route_match')->getRouteName();

  // Set page template variables.
  if (in_array($current_route_name, $full_width_pages)) {
    $variables['page_header'] = TRUE;
    $variables['full_width'] = TRUE;
    $variables['page_content'] = TRUE;
  }
}

/**
 * Set basic page variables.
 */
function tower_health_preprocess_page__page(&$variables) {
  $node = $variables['node'];
  if ($node instanceof NodeInterface) {
    $type = $node->getType();

    if ($type == 'page') {
      $variables['show_side_nav'] = $node->field_basic_enable_nav->value;
    }
  }
}

/**
 * Remove variables from exposed location search form.
 *
 * {@inheritdoc}
 */
function tower_health_preprocess_block__facets(&$variables, $hook) {
  $content = $variables['content'];

  // Get rid of the container element if empty.
  if (isset($content[0]['#type']) && $content[0]['#type'] == 'container') {
    $variables['content'] = $content[0][0];
  }
}

/**
 * Alter proximity block for location search.
 *
 * {@inheritdoc}
 */
function tower_health_preprocess_block__locationproximityfilter(&$variables, $hook) {
  if (array_key_exists('location_latlon', $variables['content']['exposed_form'])) {
    unset($variables['content']['exposed_form']['location_latlon']['value']['#field_prefix']);
    $variables['content']['exposed_form']['location_latlon']['value']['#attributes']['placeholder'] = '000000';
    $variables['content']['exposed_form']['location_latlon']['value']['#title'] = t('Zip Code');

    $distance = $variables['content']['exposed_form']['location_latlon']['distance'];

    unset($distance['from']['#field_prefix']);
    $distance['from']['#title'] = t('Distance');

    unset($variables['content']['exposed_form']['location_latlon']['distance']);
    $variables['content']['exposed_form']['location_latlon']['distance'] = $distance;
  }
  if (array_key_exists('submit', $variables['content']['exposed_form']['actions'])) {
    $variables['content']['exposed_form']['actions']['submit']['#value'] = 'Apply';
    $variables['content']['exposed_form']['actions']['submit']['#attributes']['class'][] = 'element-invisible';
  }
  if (array_key_exists('location_latlon', $variables['content']['exposed_form'])) {
    $variables['content']['exposed_form']['location_latlon']['value']['#attributes']['class'] = ['js-set-my-location'];
    $variables['content']['exposed_form']['location_latlon']['distance']['#attributes']['class'] = ['js-set-my-radius'];
  }
}

/**
 * Adds a body class by role.
 */
function tower_health_preprocess_html(&$variables) {
  foreach ($variables['user']->getRoles() as $role) {
    $variables['attributes']['class'][] = 'role-' . $role;
  }
}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function tower_health_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $suggestions[] = 'page__' . $node->bundle();
  }
}

/**
 * Adds node title to paragraphs.
 */
function tower_health_preprocess_paragraph__basic_header(&$variables) {
  $node = \Drupal::request()->attributes->get('node');
  $variables['node_title'] = $node->getTitle();
}

/**
 * Provide icon variable for rating comments paragraph.
 */
function tower_health_preprocess_paragraph__image_teaser_banner(&$variables) {
  $paragraph = $variables['paragraph'];
  $link_field = $paragraph->field_image_banner_links;
  $links = [];
  foreach ($link_field as $id => $link) {
    $links[$id]['text'] = $link->title;
    $links[$id]['url'] = Url::fromUri($link->uri);
  }
  $variables['links'] = $links;
}

/**
 * Load the utility menu into a variable.
 */
function tower_health_preprocess_menu(&$variables) {
  $utility_nav_block = Block::load('tower_health_utility');
  $utility_nav_block_view = \Drupal::entityTypeManager()
    ->getViewBuilder('block')
    ->view($utility_nav_block);
  if ($utility_nav_block_view) {
    $variables['utility_nav'] = $utility_nav_block_view;
  }
}

/**
 * Alter proximity block for provider search.
 *
 * {@inheritdoc}
 */
function tower_health_preprocess_block__providerproximityfilter(&$variables, $hook) {
  if (array_key_exists('submit', $variables['content']['exposed_form']['actions'])) {
    $variables['content']['exposed_form']['actions']['submit']['#value'] = 'Apply';
    $variables['content']['exposed_form']['actions']['submit']['#attributes']['class'][] = 'element-invisible';
  }
  if (array_key_exists('provider_location_latlong', $variables['content']['exposed_form'])) {
    $variables['content']['exposed_form']['provider_location_latlong']['value']['#attributes']['class'] = ['js-set-my-location'];
    $variables['content']['exposed_form']['provider_location_latlong']['distance']['#attributes']['class'] = ['js-set-my-radius'];

    unset($variables['content']['exposed_form']['provider_location_latlong']['value']['#field_prefix']);
    $variables['content']['exposed_form']['provider_location_latlong']['value']['#attributes']['placeholder'] = '000000';
    $variables['content']['exposed_form']['provider_location_latlong']['value']['#title'] = t('Zip Code');

    $distance = $variables['content']['exposed_form']['provider_location_latlong']['distance'];

    unset($distance['from']['#field_prefix']);
    $distance['from']['#title'] = t('Distance');

    unset($variables['content']['exposed_form']['provider_location_latlong']['distance']);
    $variables['content']['exposed_form']['provider_location_latlong']['distance'] = $distance;
  }
}

/**
 * Add region theme suggestions.
 */
function tower_health_theme_suggestions_region_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $suggestions[] = 'region__' . $variables['elements']['#region'] . '__' . $node->bundle();
  }
}

/**
 * Add breadcrumb theme suggestions.
 */
function tower_health_theme_suggestions_breadcrumb_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $suggestions[] = 'breadcrumb__' . $node->bundle();
  }
}

/**
 * Set variables for sidebar first region.
 */
function tower_health_preprocess_region__sidebar_first(&$variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if ($node->bundle() == 'location') {
      $location_name = strtolower($node->title->value);
      $location_providers_url = Url::fromRoute('view.find_a_location.find_location', ['providers[0]' => 'locations:' . strtolower($location_name)]);
      $variables['location_providers_url'] = $location_providers_url;
      $variables['button_icon'] = drupal_get_path('theme', 'tower_health') . '/images/icons/th-find-provider.svg';
    }
  }
}

/**
 * Provide variables for article teaser.
 */
function tower_health_preprocess_node__article(&$variables) {
  $node = $variables['node'];
  $view_mode = $variables['view_mode'];

  if ($node instanceof NodeInterface && $view_mode == 'teaser') {
    if ($node->hasField('field_article_type_ref') && !$node->get('field_article_type_ref')->isEmpty()) {
      $tag_refs = $node->get('field_article_type_ref')->getValue();
      $tags = [];
      foreach ($tag_refs as $id => $tag) {
        $tag = $node->field_article_type_ref[$id]->entity;
        if ($tag instanceof EntityInterface) {
          $tags[] = $tag->name->value;
        }
      }
      $variables['tags'] = $tags;
    }
  }
}

/**
 * Provide variables for provider teaser.
 */
function tower_health_preprocess_node__profile(&$variables) {
  $node = $variables['node'];
  $view_mode = $variables['view_mode'];
  $variables['button_icon'] = drupal_get_path('theme', 'tower_health') . '/images/icons/th-cal.svg';
  $variables['rating_icon'] = drupal_get_path('theme', 'tower_health') . '/images/icons/star.svg';

  if ($node instanceof NodeInterface && $view_mode == 'teaser') {
    // Preprocess address.
    if ($node->hasField('field_location_ref') && !$node->get('field_location_ref')->isEmpty()) {
      $location_refs = $node->get('field_location_ref')->getValue();
      $locations = [];
      foreach ($location_refs as $id => $location) {
        $address = $node->field_location_ref[$id]->entity;
        if ($address instanceof EntityInterface && $address->hasField('field_location_address') && !$address->get('field_location_address')->isEmpty()) {
          $locality = $address->field_location_address->locality;
          $administrative_area = $address->field_location_address->administrative_area;
          $location = $locality . ", " . $administrative_area;
          if (!in_array($location, $locations)) {
            $locations[] = $location;
          }
        }
      }
      if ($location) {
        $variables['location'] = implode(", ", $locations);
      }
    }

    // Preprocess specialties.
    if ($node->hasField('field_medical_specialties_ref') && !$node->get('field_medical_specialties_ref')->isEmpty()) {
      $specialty_refs = $node->get('field_medical_specialties_ref')->getValue();
      $specialties = [];
      foreach ($specialty_refs as $id => $specialty) {
        $entity = $node->field_medical_specialties_ref[$id]->entity;
        if ($entity instanceof EntityInterface) {
          $tid = $entity->tid->value;
          $term = Term::load($tid);
          $name = $term->getName();
          $specialties[$id]['text'] = $name;
        }
      }
      if ($specialties) {
        $variables['specialties'] = $specialties;
      }
    }

    // Preprocess focuses.
    if ($node->hasField('field_area_interest_ref') && !$node->get('field_area_interest_ref')->isEmpty()) {
      $focus_refs = $node->get('field_area_interest_ref')->getValue();
      $focuses = [];
      foreach ($focus_refs as $id => $focus) {
        $entity = $node->field_area_interest_ref[$id]->entity;
        if ($entity instanceof EntityInterface) {
          $tid = $entity->tid->value;
          $term = Term::load($tid);
          $name = $term->getName();
          $focuses[$id]['text'] = $name;
        }
      }
      if ($focuses) {
        $variables['focuses'] = $focuses;
      }
    }

    // Preprocess languages.
    if ($node->hasField('field_profile_languages') && !$node->get('field_profile_languages')->isEmpty()) {
      $languages = $node->get('field_profile_languages')->getValue();
      $language_names = [];
      foreach ($languages as $id => $language) {
        $language_names[$id]['text'] = $language['value'];
      }
      if ($language_names) {
        $variables['languages'] = $language_names;
      }
    }

    // Preprocess profile image.
    if ($node->hasField('field_profile_image') && !$node->get('field_profile_image')->isEmpty()) {
      $variables['src'] = file_create_url($node->field_profile_image->entity->field_media_image->entity->uri->value);
      $variables['alt'] = $node->field_profile_image->entity->field_media_image->entity->alt;
    }
    else {
      $variables['src'] = drupal_get_path('theme', 'tower_health') . '/images/people/provider-placeholder.png';
      $variables['alt'] = "Provider placeholder image";
    }

    if ($node->hasField('field_profile_image') && !$node->get('field_profile_image')->isEmpty()) {
      $media = $node->field_profile_image->entity;
      if ($media instanceof EntityInterface && $media->hasField('field_media_image') && !$media->get('field_media_image')->isEmpty()) {
        $file = $media->field_media_image->entity;
        if ($file instanceof EntityInterface) {
          $url = $file->uri->value;
          $image = ImageStyle::load('teaser_image')->buildUrl($url);
          $variables['src'] = $image;
          $variables['alt'] = $media->field_media_image->alt;
        }
      }
    }
    else {
      // Fallback if no image uploaded.
      $variables['src'] = drupal_get_path('theme', 'tower_health') . '/images/people/provider-placeholder.png';
      $variables['alt'] = "Provider placeholder image";
    }
  }
  elseif ($node instanceof EntityInterface && $view_mode == 'page_header') {
    $variables['appointment_phone'] = theme_get_setting('appointment_phone_number');
    $variables['appointment_phone_label'] = theme_get_setting('appointment_phone_label');
    $variables['name'] = $node->title->value;
    if (!$node->get('field_profile_job_title')->isEmpty()) {
      $variables['lead_title'] = $node->field_profile_job_title->value;
    }
    if (!$node->get('field_profile_video')->isEmpty()) {
      $variables['provider_video'] = $node->field_profile_video->value;
    }
    if (!$node->get('field_rating_overall')->isEmpty()) {
      $variables['rating'] = $node->field_rating_overall->value;
    }
    if (!$node->get('field_rating_count')->isEmpty()) {
      $variables['review_amt'] = $node->field_rating_count->value;
    }
    if ($node->hasField('field_profile_image') && !$node->get('field_profile_image')->isEmpty()) {
      $media = $node->field_profile_image->entity;
      if ($media instanceof EntityInterface && $media->hasField('field_media_image') && !$media->get('field_media_image')->isEmpty()) {
        $file = $media->field_media_image->entity;
        if ($file instanceof EntityInterface) {
          $url = $file->uri->value;
          $image = ImageStyle::load('teaser_image')->buildUrl($url);
          $variables['src'] = $image;
          $variables['alt'] = $media->field_media_image->alt;
        }
      }
    }
    else {
      // Fallback if no image uploaded.
      $variables['src'] = drupal_get_path('theme', 'tower_health') . '/images/people/provider-placeholder.png';
      $variables['alt'] = "Provider placeholder image";
    }
  }
}

/**
 * Provide variables for location nodes.
 */
function tower_health_preprocess_node__service(&$variables) {
  $node = $variables['node'];
  $view_mode = $variables['view_mode'];

  if ($node instanceof NodeInterface && $view_mode == 'sidebar_first') {
    $title = $node->getTitle();
    $provider_icon = drupal_get_path('theme', 'tower_health') . '/components/images/icons/th-find-provider.svg';
    $location_icon = drupal_get_path('theme', 'tower_health') . '/components/images/icons/th-find-hospital.svg';
    $cta_list = [];

    if ($node->hasField('field_conditions_ref') && !$node->get('field_conditions_ref')->isEmpty()) {
      $url = Url::fromRoute('view.find_a_provider.find_doctor', ['providers[0]' => 'service:' . strtolower($title)]);
      $cta_list[] = [
        'text' => t('@title Providers', ['@title' => $title]),
        'url' => $url,
        'icon' => $provider_icon,
      ];
    }

    $url = Url::fromRoute('view.find_a_location.find_location', ['f[0]' => 'services:' . strtolower($title)]);
    $cta_list[] = [
      'text' => t('@title Locations', ['@title' => $title]),
      'url' => $url,
      'icon' => $location_icon,
    ];

    $variables['cta_list'] = $cta_list;
  }
}

/**
 * Provide variables for location teaser.
 */
function tower_health_preprocess_node__location(&$variables) {
  $node = $variables['node'];
  $view_mode = $variables['view_mode'];
  $variables['button_icon'] = drupal_get_path('theme', 'tower_health') . '/images/icons/th-find-hospital.svg';

  if ($node instanceof NodeInterface && $view_mode == 'teaser_small') {
    // Preprocess address variables.
    if ($node->hasField('field_location_address') && !$node->get('field_location_address')->isEmpty()) {
      $locality = $node->field_location_address->locality;
      $administrative_area = $node->field_location_address->administrative_area;
      $address_1 = $node->field_location_address->address_line1;
      $address_2 = $locality . ', ' . $administrative_area;
      $href = "https://www.google.com/maps/place/" . str_replace(' ', '+', $address_1) . '+' . $locality . '+' . $administrative_area;
      $variables['address1'] = $address_1;
      $variables['address2'] = $address_2;
      $variables['href'] = $href;
    }
  }
  if ($node instanceof NodeInterface && $view_mode == 'teaser') {
    // Preprocess image variables.
    $media = $node->field_location_image->entity;
    if ($media instanceof EntityInterface && $media->hasField('field_media_image') && !$media->get('field_media_image')->isEmpty()) {
      $file = $media->field_media_image->entity;
      if ($file instanceof EntityInterface) {
        $url = $file->uri->value;
        $image = ImageStyle::load('teaser_image')->buildUrl($url);
        $variables['src'] = $image;
        $variables['alt'] = $media->field_media_image->alt;
      }
    }
    else {
      // Fallback if no image uploaded.
      $variables['src'] = drupal_get_path('theme', 'tower_health') . '/images/people/provider-placeholder.png';
      $variables['alt'] = "Location placeholder image";
    }
    if ($node->hasField('field_location_hours') && !$node->get('field_location_hours')->isEmpty()) {
      $variables['hours'] = TRUE;
    }
    // Preprocess address variables.
    if ($node->hasField('field_location_address') && !$node->get('field_location_address')->isEmpty()) {
      $locality = $node->field_location_address->locality;
      $administrative_area = $node->field_location_address->administrative_area;
      $address_1 = $node->field_location_address->address_line1;
      $address_2 = $locality . ', ' . $administrative_area;
      $href = "https://www.google.com/maps/place/" . str_replace(' ', '+', $address_1) . '+' . $locality . '+' . $administrative_area;
      $variables['address1'] = $address_1;
      $variables['address2'] = $address_2;
      $variables['href'] = $href;
    }
    // Preprocess phone numbers.
    if ($node->hasField('field_location_phone_number') && !$node->get('field_location_phone_number')->isEmpty()) {
      $variables['phone'] = $node->field_location_phone_number->value;
    }
    if ($node->hasField('field_location_fax') && !$node->get('field_location_fax')->isEmpty()) {
      $variables['fax'] = $node->field_location_fax->value;
    }
  }
  elseif ($node instanceof EntityInterface && $view_mode == 'page_header') {
    $variables['rating_icon'] = drupal_get_path('theme', 'tower_health') . '/images/icons/star.svg';
    $variables['appointment_phone'] = theme_get_setting('appointment_phone_number');
    $variables['appointment_phone_label'] = theme_get_setting('appointment_phone_label');
    $variables['name'] = $node->title->value;
    if (!$node->get('field_location_type')->isEmpty()) {
      $term = Term::load($node->field_location_type->entity->tid->value);
      $name = $term->getName();
      $variables['type'] = $name;
    }
    $variables['address_1'] = $node->field_location_address->address_line1;
    $variables['address_2'] = $node->field_location_address->locality . ', ' . $node->field_location_address->administrative_area . ' ' . $node->field_location_address->postal_code;
    $variables['phone'] = $node->field_location_phone_number->value;
    if ($node->hasField('field_location_image') && !$node->get('field_location_image')->isEmpty()) {
      $media = $node->field_location_image->entity;
      if ($media instanceof EntityInterface && $media->hasField('field_media_image') && !$media->get('field_media_image')->isEmpty()) {
        $file = $media->field_media_image->entity;
        if ($file instanceof EntityInterface) {
          $url = $file->uri->value;
          $image = ImageStyle::load('location_header_image')->buildUrl($url);
          $variables['src'] = $image;
          $variables['alt'] = $media->field_media_image->alt;
        }
      }
    }

    // Preprocess other providers link.
    $location_name = strtolower($node->title->value);
    $location_providers_url = Url::fromRoute('view.find_a_location.find_location', ['providers[0]' => 'locations:' . strtolower($location_name)]);
    $variables['location_providers_url'] = $location_providers_url;

    // Preprocess directions link.
    $locality = $node->field_location_address->locality;
    $administrative_area = $node->field_location_address->administrative_area;
    $address_1 = $node->field_location_address->address_line1;
    $address_2 = $locality . ', ' . $administrative_area;
    $href = "https://www.google.com/maps/place/" . str_replace(' ', '+', $address_1) . '+' . $locality . '+' . $administrative_area;
    $variables['address1'] = $address_1;
    $variables['address2'] = $address_2;
    $variables['href'] = $href;
  }
}

/**
 * Provide icon variable for rating comments paragraph.
 */
function tower_health_preprocess_paragraph__rating_comments(&$variables) {
  $variables['rating_icon'] = drupal_get_path('theme', 'tower_health') . '/images/icons/star.svg';
}

/**
 * Provide variables for profile comments field.
 */
function tower_health_preprocess_field__field_rating_comments_ref(&$variables) {
  $variables['rating_icon'] = drupal_get_path('theme', 'tower_health') . '/images/icons/star.svg';

  $rating = $variables['element']['#object']->field_rating_overall->value;
  $variables['rating'] = $rating;

  $count = $variables['element']['#object']->field_rating_count->value;
  $variables['count'] = $count;

  $reviews = [];
  foreach ($variables['items'] as $id => $item) {
    $paragraph = $item["content"]["#paragraph"];
    $reviews[$id]["review"] = strip_tags($paragraph->field_rating_comment_body->value);
    $reviews[$id]["rating"] = $paragraph->field_rating_comment_rating->value;
    $reviews[$id]["date"] = date("F Y", strtotime($paragraph->field_rating_comment_date->value));
  }

  $variables["reviews"] = $reviews;
}

/**
 * Provide variables for profile language field template.
 */
function tower_health_preprocess_field__field_profile_languages(&$variables) {
  $languages = [];
  foreach ($variables['items'] as $id => $language) {
    $language_name = $language['content']['#context']['value'];
    $languages[$id]['text'] = $language_name;
  }

  $variables['languages'] = $languages;
}

/**
 * Provide variables for profile phone field template.
 */
function tower_health_preprocess_field__field_profile_phone(&$variables) {
  $variables['phone'] = $variables['items'][0]['content']['#title'];
  $variables['url'] = $variables['items'][0]['content']['#url'];
}

/**
 * Provide variables for profile accepted insurance field template.
 */
function tower_health_preprocess_field__field_insurance_ref(&$variables) {
  $accepted_policies = [];

  foreach ($variables['items'] as $policy) {
    $insurance_entity = $policy['content']['#options']['entity'];
    if ($insurance_entity instanceof EntityInterface && $insurance_entity->hasField('field_insurance_company') && !$insurance_entity->get('field_insurance_company')->isEmpty()) {
      $values = $insurance_entity->get('field_insurance_company')->getValue();
      foreach ($values as $value) {
        $term = Term::load($value['target_id']);
        $name = $term->getName();
        if (!in_array($name, $accepted_policies)) {
          $accepted_policies[] = $name;
        }
      }
    }
  }
  sort($accepted_policies);
  $variables['policies'] = $accepted_policies;
}

/**
 * Provide variables for profile affiliations field template.
 */
function tower_health_preprocess_field__field_affiliations_ref(&$variables) {
  $affiliations = [];
  foreach ($variables['items'] as $id => $affiliation) {
    $affiliations[$id]['text'] = $affiliation['content'];
  }
  $variables['affiliations'] = $affiliations;
}

/**
 * Provide variables for profile specialties field template.
 */
function tower_health_preprocess_field__field_medical_specialties_ref(&$variables) {
  $specialties = [];
  foreach ($variables['items'] as $id => $specialty) {
    $specialties[$id]['text'] = $specialty['content'];
  }
  $variables['specialties'] = $specialties;
}

/**
 * Provide variables for profile focus field template.
 */
function tower_health_preprocess_field__field_area_interest_ref(&$variables) {
  $focuses = [];
  foreach ($variables['items'] as $id => $focus) {
    $focuses[$id]['text'] = $focus['content'];
  }
  $variables['focuses'] = $focuses;
}

/**
 * Provide variables for profile certifications field template.
 */
function tower_health_preprocess_field__field_profile_board_certified(&$variables) {
  $certifications = [];
  foreach ($variables['items'] as $id => $certification) {
    $certifications[$id]['title'] = $certification['content'];
  }
  $variables['certifications'] = $certifications;
}

/**
 * Provide variables for profile education field template.
 */
function tower_health_preprocess_field__field_profile_education(&$variables) {
  $educations = [];
  foreach ($variables['items'] as $id => $education) {
    $paragraph = $education['content']['#paragraph'];
    $educations[$id]['title'] = $paragraph->field_education_institution_ref->entity->name->value;
    $educations[$id]['text'] = $paragraph->field_education_type->value;
  }
  $variables['educations'] = $educations;
}

/**
 * Provide variables for location hours field template.
 */
function tower_health_preprocess_field__field_location_hours(&$variables) {
  $hours = [];
  foreach ($variables['items'] as $hour) {
    foreach ($hour['content']['#office_hours'] as $id => $daily) {
      $hours[$id]['title'] = $daily['label'];
      $hours[$id]['hours'] = $daily['formatted_slots'];
    }
  }
  $variables['hours'] = $hours;
}

/**
 * Provide variables for location services template.
 */
function tower_health_preprocess_field__field_services_ref(&$variables) {
  $services = [];
  foreach ($variables['items'] as $id => $service) {
    $services[$id]['text'] = $service['content'];
  }
  $variables['services'] = $services;
}
